{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template for Testing stack VPC and Security Group",
  "Parameters" : {

    "InstanceType" : {
      "Description" : "Server EC2 instance type",
      "Type" : "String",
      "Default" : "c3.large",
      "AllowedValues" : [ "c3.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge" ],
      "ConstraintDescription" : "Must be an instance type that supports 4 GB or more of RAM"
    },

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "Default":"manoj-aws"
    },

    "InstanceTag" : {
      "Description" : "Tag name of stack instances",
      "Type" : "String",
      "Default" : "Manoj_TestInstance"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "c3.large"    : { "Arch" : "64" },
      "m4.large"    : { "Arch" : "64" },
      "m4.xlarge"   : { "Arch" : "64" },
      "m4.2xlarge"  : { "Arch" : "64" },
      "m4.4xlarge"  : { "Arch" : "64" },
      "m4.10xlarge" : { "Arch" : "64" },
      "c4.2xlarge"  : { "Arch" : "64" },
      "c4.4xlarge"  : { "Arch" : "64" },
      "c4.8xlarge"  : { "Arch" : "64" },
      "g2.8xlarge"  : { "Arch" : "64" },
      "r3.large"    : { "Arch" : "64" },
      "r3.xlarge"   : { "Arch" : "64" },
      "r3.2xlarge"  : { "Arch" : "64" },
      "r3.4xlarge"  : { "Arch" : "64" },
      "r3.8xlarge"  : { "Arch" : "64" },
      "i2.xlarge"   : { "Arch" : "64" },
      "i2.2xlarge"  : { "Arch" : "64" },
      "i2.4xlarge"  : { "Arch" : "64" },
      "i2.8xlarge"  : { "Arch" : "64" },
      "d2.xlarge"   : { "Arch" : "64" },
      "d2.2xlarge"  : { "Arch" : "64" },
      "d2.4xlarge"  : { "Arch" : "64" },
      "d2.8xlarge"  : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
      "ap-northeast-1" : {"64": "ami-abb682aa"},
      "ap-southeast-1" : {"64": "ami-ce1f399c"},
      "ap-southeast-2" : {"64": "ami-0d254837"},
      "eu-west-1"      : {"64": "ami-04a00d73"},
      "sa-east-1"      : {"64": "ami-df06b3c2"},
      "us-east-1"      : {"64": "ami-00a11e68"},
      "us-west-1"      : {"64": "ami-4b3f350e"},
      "us-west-1-amz"  : {"64": "ami-cd3aff89"},
      "us-west-2"      : {"64": "ami-fb1326cb"}
    }
  },

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "172.14.0.0/16",
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "Subnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "172.14.20.0/24",
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} }
        ]
      }
    },
   "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "SubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "RouteTableId" : { "Ref" : "RouteTable" }
      }
    },

  
    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

    "OutBoundPortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "1",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0"
      }
    },

    
    "InboundSSHNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "22",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },

    "InboundHTTPNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "80",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },

    "SubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Subnet" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },

    "sgelb": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Allow All Traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0/0"
          }
        ], 
          "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "172.14.0.0/0"
          }
        ]
      }
    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "GroupDescription" : "Allow All Traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "172.14.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80"
        }
        ], 
          "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "elbtestlb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "Subnet"
          }
        ],
        "SecurityGroups": [
             "Ref":"sgelb"
       ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:8080/petstoreWeb/index.jsp",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "Instances": [
          {
            "Ref": "instancei1"
          },
          {
            "Ref": "instancei2"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "Tags": [
          {
            "Key": "testlb",
            "Value": "website"
          }
        ]
      }
    },

    "instancei1" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "AvailabilityZone" : { "Fn::GetAtt" : [ "Subnet", "AvailabilityZone" ] },
        "BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvdb", "Ebs" : { "VolumeSize" : "65" } } ],
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [ {
            "AssociatePublicIpAddress" : "true",
            "DeviceIndex" : "0" ,
            "GroupSet" : [ { "Ref" : "InstanceSecurityGroup" } ],
            "SubnetId" : { "Ref" : "Subnet" }
        } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum install -y tomcat8"
          ]]}}
      }
    },
    "instancei2" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "AvailabilityZone" : { "Fn::GetAtt" : [ "Subnet", "AvailabilityZone" ] },
        "BlockDeviceMappings" : [ { "DeviceName" : "/dev/xvdb", "Ebs" : { "VolumeSize" : "65" }}   ],
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [ {
            "AssociatePublicIpAddress" : "true",
            "DeviceIndex" : "0" ,
            "GroupSet" : [ { "Ref" : "InstanceSecurityGroup" } ],
            "SubnetId" : { "Ref" : "Subnet" }
        } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "       yum -y install tomcat8 "
        ]]}}
      }
    }
},
"Outputs" : {
    "URL" : {
      "Description" : "The URL of the website",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "elbtestlb", "DNSName" ]}]]}
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "instancei2", "PublicIp" ] }
    }
  }
}